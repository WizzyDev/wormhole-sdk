import { encoding } from "@wormhole-foundation/sdk-base";
import { deserialize, deserializePayload } from "../src/vaa";
import "../src/payloads/pyth";

const cases = [
  // "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",
  // "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",
];

describe("Pyth Price VAA tests", function () {
  it("should correctly deserialize and reserialize a Pyth Price VAA", function () {
    for (const testCase of cases) {
      const vaaBytes = encoding.b64.decode(testCase);
      const rawParsed = deserialize("Uint8Array", vaaBytes);
      console.log("Parsed", rawParsed);
      const payloadParsed = deserializePayload(
        "Pyth:PriceAttestation",
        rawParsed.payload.slice(0, 150),
      );
      console.log("PayloadParsed", payloadParsed);

      // ...
    }
  });
});
